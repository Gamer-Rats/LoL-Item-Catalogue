@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

@font-face {
    font-family: 'Beaufort';
    src: url(fonts/BeaufortforLOL-Bold.ttf);
}

* {
    font-family: 'Poppins', sans-serif;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    background-image: url("bg-img.jpg");
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    height: 100vh;
    color: #c5c0ab;
}

.logo h1 {
    font-family: 'Beaufort';
    font-size: 32px;
    color: #c5c0ab;
}

nav {
    font-size: 14px;
    position: sticky;
    top: 0;
    left: 0;
    z-index: 99;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 60px;
    width: 100%;
    padding: 1em;
    background: linear-gradient(to right, #000, #05232d);
    border-bottom: 1px solid #513e1d;
}

footer {
    width: 100%;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    background: rgba(255, 255, 255, 0.026);
}

.footer-home {
    position: fixed;
    bottom: 0;
}

nav ul {
    display: flex;
    list-style-type: none;
    margin: 0;
    padding: 0;
    gap: 4em;
}

nav a {
    text-decoration: none;
    color: #c5c0ab;
    padding: 0.5em 1em;
    transition: color 0.5s ease;
}

nav a:hover {
    border-bottom: 1px solid #947034;
    color: #f0efea;
}

.logo {
    margin: 0% 10%;
}

.login {
    margin: 0% 10%;
}

.login a {
    background-color: transparent;
    padding: 8px 18px;
    border: 1px solid #947034;
    transition: background-color 0.5s ease;
}

.login a:hover {
    background-color: #947034;
    color: #f0efea;
}

.home {
    height: 100vh;
    display: flex;
    align-items: center;
}

.hero {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 5em;
    margin: 0% 10%;
}

.welcome {
    width: 55%;
}

.welcome h2 {
    font-size: 48px;
}

.welcome p {
    font-size: 22px;
    padding-bottom: 1.5em;
}

.welcome #beaufort {
    font-family: 'Beaufort';
    font-size: 54px;
}

.browse a {
    text-decoration: none;
    color: #f0efea;
    background-color: #947034;
    padding: 14px 20px;
    font-weight: 500;
    transition: background-color 0.5s ease;
}

.browse a:hover {
    background-color: #c59d5a;
}

/*items page*/

.items {
    display: flex;
    flex-direction: row;
    flex-grow: 10;
}

#master{
    flex-grow: 1;
    background-color: #06242f;
    height: 100%;
    max-height: 100%;
    padding: 1em;
    height: 100vh;
    display: flex;
    flex-direction: column;
}

#searchKey{
    width: 70%;
    padding: 10px;
    margin-bottom: 10px;
    display: inline-block;
}

#searchButton{
    padding: 10px;
    background-color: #011a21;
    color: #c5c0ab;
    border: none;
    cursor: pointer;
}

#detail{
    flex-grow: 6;
    height: 100%;
    text-align: center;
    padding: 20px;
}

#list {
    overflow-y: auto;
    flex-grow: 1;
}

#master #list li a {
    display: block;
    box-sizing: border-box;
    background-color: #011a21;
    padding: 1em;
    width: 100%;
    margin-bottom: 5px;
    text-decoration: none;
    color: #c5c0ab;
}

#master #list li {
    list-style-type: none;
}

#master #list li a:hover {
    background-color: #011014;
    color: #f0efea;
}

#master .search {
    position: relative;
    width: 100%;
    margin: 1em auto;
    box-sizing: border-box;
    flex-shrink: 0;
}

#master input {
    background-color: #011a21;
    outline: none;
    border: none;
    color: #c5c0ab;
}

#searchButton {
    position: absolute;
}

.item-detail-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
}

.item-header {
    display: inline-flex; /* Use inline-flex to keep the ribbon next to the name */
    align-items: center;
    gap: 10px; /* Add some spacing between the name and the ribbon */
    width: auto; /* Remove the full width constraint */
}

.save-ribbon {
    cursor: pointer;
    color: #fff; /* Default color (white) */
    font-size: 1.5rem;
    transition: color 0.3s ease;
}

.save-ribbon.favorited {
    color: #f39c12; /* Gold color when favorited */
}

.save-ribbon:hover {
    color: #f39c12; /* Highlight color on hover */
}

.item-tags {
    font-size: 1rem;
    color: #947034; /* Gold color for tags */
    margin: 5px 0;
    font-weight: bold;
}

function saveItem(name) {
    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
    const ribbon = document.querySelector(`.save-ribbon[data-name="${name}"]`);

    if (!favorites.includes(name)) {
        favorites.push(name);
        localStorage.setItem('favorites', JSON.stringify(favorites));
        alert(`${name} has been added to your favorites!`);
        if (ribbon) ribbon.classList.add('favorited');
    } else {
        favorites = favorites.filter(item => item !== name);
        localStorage.setItem('favorites', JSON.stringify(favorites));
        alert(`${name} has been removed from your favorites.`);
        if (ribbon) ribbon.classList.remove('favorited');
    }
}

function selectWithDetails(name) {
    let result = document.querySelector('#detail');
    let html = '';
    let data = findRecord(name);
    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];

    if (data) {
        const isFavorited = favorites.includes(name);
        html = `
            <div class="item-detail-container">
                <img src="https://ddragon.leagueoflegends.com/cdn/15.7.1/img/item/${data.image.full}" alt="${data.name}">
                <div class="item-header">
                    <h2>${data.name}</h2>
                    <span class="save-ribbon ${isFavorited ? 'favorited' : ''}" data-name="${name}" onclick="saveItem('${name}')">
                        <i class="fa-solid fa-bookmark"></i>
                    </span>
                </div>
                <p>${data.plaintext || 'N/A'}</p>
                <p><strong>Gold</strong></p>
                <p>Purchase Value | ${data.gold.base}</p>
                <p>Sell Value | ${data.gold.sell}</p>
                <p><strong>Availability</strong></p>
                <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                    ${Object.keys(data.maps)
                    .filter(mapId => data.maps[mapId])
                    .map(mapId => `<img src="https://ddragon.leagueoflegends.com/cdn/15.7.1/img/map/map${mapId}.png" alt="Map ${mapId}" style="width: 50px; height: 50px;">`)
                    .join('')}
                </div>
                <p><strong>Upgrades</strong></p>
                <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                    ${data.into
                    ? data.into
                        .map(into => `<img src="https://ddragon.leagueoflegends.com/cdn/15.7.1/img/item/${into}.png" alt="${into}" style="width: 50px; height: 50px;">`)
                        .join('')
                    : '<p>No upgrades available</p>'}
                </div>
            </div>
        `;
    } else {
        html = '<p>Item not found</p>';
    }

    result.innerHTML = html;
}